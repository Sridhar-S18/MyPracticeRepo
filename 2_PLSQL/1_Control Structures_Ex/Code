-- Create Customers table
CREATE TABLE Customers (
    CustomerID NUMBER PRIMARY KEY,
    Name VARCHAR2(50),
    Age NUMBER,
    Balance NUMBER(10, 2),
    IsVIP CHAR(1),
    LoanInterestRate NUMBER(5, 2)
);

-- Create Loans table
CREATE TABLE Loans (
    LoanID NUMBER PRIMARY KEY,
    CustomerID NUMBER,
    DueDate DATE,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

-- Insert Sample Data
INSERT INTO Customers VALUES (1, 'Alice', 65, 15000, 'N', 7.5);
INSERT INTO Customers VALUES (2, 'Bob', 45, 8000, 'N', 8.0);
INSERT INTO Customers VALUES (3, 'Charlie', 70, 12000, 'N', 6.8);
INSERT INTO Customers VALUES (4, 'David', 30, 3000, 'N', 9.0);

INSERT INTO Loans VALUES (101, 1, SYSDATE + 10);
INSERT INTO Loans VALUES (102, 2, SYSDATE + 40);
INSERT INTO Loans VALUES (103, 3, SYSDATE + 20);
INSERT INTO Loans VALUES (104, 4, SYSDATE + 5);

COMMIT;

--Scenario 1
BEGIN
  FOR cust IN (SELECT * FROM Customers) LOOP
    IF cust.Age > 60 THEN
      UPDATE Customers
      SET LoanInterestRate = LoanInterestRate - 1
      WHERE CustomerID = cust.CustomerID;
    END IF;
  END LOOP;
END;
/

SELECT CustomerID, Name, Age, LoanInterestRate FROM Customers;

--Scenario 2
BEGIN
  FOR cust IN (SELECT * FROM Customers) LOOP
    IF cust.Balance > 10000 THEN
      UPDATE Customers
      SET IsVIP = 'Y'
      WHERE CustomerID = cust.CustomerID;
    END IF;
  END LOOP;
END;
/

SELECT CustomerID, Name, Balance, IsVIP FROM Customers;

--Scenario 3
BEGIN
  FOR loan_rec IN (
    SELECT l.LoanID, l.DueDate, c.Name
    FROM Loans l
    JOIN Customers c ON l.CustomerID = c.CustomerID
    WHERE l.DueDate <= SYSDATE + 30
  ) LOOP
    DBMS_OUTPUT.PUT_LINE('Reminder: Loan ' || loan_rec.LoanID || 
                         ' for customer ' || loan_rec.Name || 
                         ' is due on ' || TO_CHAR(loan_rec.DueDate, 'DD-Mon-YYYY'));
  END LOOP;
END;
/

SET SERVEROUTPUT ON;

